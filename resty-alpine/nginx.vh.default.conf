server {
    listen       9000;
    server_name  localhost;

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;

     location /lua { 
                     
        default_type text/html;
           content_by_lua '
                 ngx.say("<p>hello world! -- saying by another lua try</p>")                                                                                                                      
           ';  
    }   
    location /json {

       lua_code_cache off; #enables livereload for development

       content_by_lua '

           if ngx.req.get_method() == "POST" then
             local cjson = require("cjson")
             ngx.req.read_body()
             local text = ngx.var.request_body
             local spec = cjson.new().decode(text)
             ngx.say("You POST:".. cjson.new().encode(spec))
           else
               ngx.say("Not a POST request")
           end
        ';
    }



    location /simpleinterface {
    resolver 10.220.0.2;  # use Google's open DNS server for an example

    content_by_lua '

      -- For simple singleshot requests, use the URI interface.
      local http = require "resty.http"
      local httpc = http.new()
      local res, err = httpc:request_uri("http://example.com/helloworld", {
        method = "POST",
        body = "a=1&b=2",
        headers = {
          ["Content-Type"] = "application/x-www-form-urlencoded",
        }
      })

      if not res then
        ngx.say("failed to request: ", err)
        return
      end

      -- In this simple form, there is no manual connection step, so the body is read
      -- all in one go, including any trailers, and the connection closed or keptalive
      -- for you.

      ngx.status = res.status

      for k,v in pairs(res.headers) do
          --
      end

      ngx.say(res.body)
    ';
  }


    location / {
        root   /usr/local/openresty/nginx/html;
        index  index.html index.htm;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/local/openresty/nginx/html;
    }

}
